---
# Specify whether or not this role should install the NGINX App Protect WAF product.
nginx_app_protect_waf_enable: true

# Specify whether or not this role should install the NGINX App Protect DoS product.
nginx_app_protect_dos_enable: false

# Specify whether you want to install NGINX App Protect WAF, upgrade to the latest version, or remove NGINX App Protect WAF.
# Using 'install' will install the latest version of NGINX App Protect WAF on a fresh install.
# Using 'upgrade' will upgrade NGINX App Protect WAF to the latest version of NGINX App Protect WAF on every playbook execution.
# Using 'uninstall' will remove NGINX App Protect WAF from your system.
# Default is install.
nginx_app_protect_waf_setup: install

# Specify whether you want to install NGINX App Protect DoS, upgrade to the latest version, or remove NGINX App Protect DoS.
# Using 'install' will install the latest version of NGINX App Protect DoS on a fresh install.
# Using 'upgrade' will upgrade NGINX App Protect DoS to the latest version of NGINX App Protect DoS on every playbook execution.
# Using 'uninstall' will remove NGINX App Protect DoS from your system.
# Default is install.
nginx_app_protect_dos_setup: install

# If you have a RHEL subscription, NGINX App Protect WAF and DoS's dependencies will use subscription repos.
# Otherwise, it will source packages from CentOS' repositories.
# Default is false.
nginx_app_protect_use_rhel_subscription_repos: false

# The installation of NGINX App Protect WAF includes a base signature set, which may be out of date.
# This option installs the latest NGINX App Protect signatures.
# Default is true.
nginx_app_protect_waf_install_signatures: true

# (Optional) Installs a specific version of the NGINX App Protect WAF attack signatures package
# Default is to install the latest release.
# nginx_app_protect_waf_signatures_version: "=2019.07.16-1" # <- Example value for Debian/Ubuntu

# The installation of NGINX App Protect WAF can include a page of frequently-updated, high-accuracy signatures called "threat campaigns".
# This option installs the latest NGINX App Protect WAF threat campaigns signatures.
# Default is true.
nginx_app_protect_waf_install_threat_campaigns: true

# (Optional) Installs a specific version of the NGINX App Protect WAF threat campaigns package
# Default is to install the latest release.
# nginx_app_protect_threat_campaigns_version: "=2020.08.20-1" # <- Example value for Debian/Ubuntu

# (Optional) Choose where to fetch the NGINX App Protect and security updates signing keys from.
# Default settings are the official NGINX signing key hosts.
# nginx_app_protect_signing_key:
#   nginx_plus: https://cs.nginx.com/static/keys/nginx_signing.key
#   waf_security_updates: https://cs.nginx.com/static/keys/app-protect-security-updates.key

# Specify whether or not you want to manage the NGINX App Protect WAF repositories.
# Using 'true' will manage NGINX App Protect WAF repositories.
# Using 'false' will not manage the NGINX App Protect WAF repositories, allowing them to be managed through other means.
# Default is true
nginx_app_protect_waf_manage_repo: true

# Specify whether or not you want to manage the NGINX App Protect DoS repositories.
# Using 'true' will manage NGINX App Protect DoS repositories.
# Using 'false' will not manage the NGINX App Protect DoS repositories, allowing them to be managed through other means.
# Default is true
nginx_app_protect_dos_manage_repo: true

# (Optional) Specify repository for NGINX Plus.
# Defaults are the official NGINX repositories.
# nginx_plus_repository: deb [arch=amd64] https://pkgs.nginx.com/plus/debian buster nginx-plus

# (Optional) Specify repository for NGINX App Protect WAF.
# Defaults are the official NGINX repositories.
# nginx_app_protect_waf_repository: deb [arch=amd64 signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://pkgs.nginx.com/app-protect/debian buster nginx-plus

# (Optional) Specify repository for NGINX App Protect WAF security updates.
# Defaults are the official NGINX repositories.
# nginx_app_protect_waf_security_updates_repository: deb [arch=amd64 signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://app-protect-security-updates.nginx.com/debian buster nginx-plus

# (Optional) Specify repository for NGINX App Protect DoS.
# Defaults are the official NGINX repositories.
# nginx_app_protect_dos_repository: deb [arch=amd64 signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://pkgs.nginx.com/app-protect-dos/debian buster nginx-plus

# Location of your NGINX App Protect license in your local machine.
# Default is the files folder within the NGINX Ansible role.
nginx_app_protect_license:
  certificate: license/nginx-repo.crt
  key: license/nginx-repo.key

# Set up NGINX App Protect license (cert/key) before installation.
# Default is true.
nginx_app_protect_setup_license: true

# Removes NGINX App Protect license (cert/key) after installation for security purposes.
# Default is true.
nginx_app_protect_remove_license: true

# Start/Restart NGINX service when App Protect related changes are complete.
# Default is true.
nginx_app_protect_start: true

# Increase NGINX service timeout to accommodate ruleset loading from default 90s.
# Default is commented out.
nginx_app_protect_service_modify: true
nginx_app_protect_timeoutstartsec: 180
nginx_app_protect_timeoutstopcsec: 180

# Copy local NGINX App Protect security policy to host
nginx_app_protect_security_policy_file_enable: false
nginx_app_protect_security_policy_file:
  - src: files/config/security-policy.json
    dest: /etc/app_protect/conf/security-policy.json

# Copy local NGINX App Protect log policy to host
nginx_app_protect_log_policy_file_enable: false
nginx_app_protect_log_policy_file:
  - src: files/config/log-policy.json
    dest: /etc/app_protect/conf/log-policy.json

# Set SELinux enforcing for NGINX (CentOS/Red Hat only) - you may need to open ports on your own
nginx_app_protect_selinux: false

# Enable enforcing mode if true.  Permissive if false (audit only, no enforcing) globally (only works with nginx_selinux: true)
nginx_app_protect_selinux_enforcing: true

# List of TCP ports to add to http_port_t type (80 and 443 have this type already)
# nginx_app_protect_selinux_tcp_ports:
#   - 80
#   - 443

# List of TCP ports to add to syslog_port_t type (80 and 443 have this type already)
# nginx_app_protect_selinux_syslog_tcp_ports:
#   - 1514
#   - 5144

# List of UDP ports to add to http_port_t type
# nginx_app_protect_selinux_udp_ports:
#   - 80
#   - 443

# List of UDP ports to add to syslog_port_t type
# nginx_app_protect_selinux_syslog_udp_ports:
#   - 1514
#   - 5144

# Temporary directory to hold selinux modules
nginx_app_protect_selinux_tempdir: /tmp
