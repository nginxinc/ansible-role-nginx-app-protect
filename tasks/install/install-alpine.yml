---
- name: (Alpine Linux) {{ nginx_license_status is defined | ternary('Remove', 'Configure') }} NGINX App Protect repository
  lineinfile:
    path: /etc/apk/repositories
    insertafter: EOF
    line: "{{ nginx_app_protect_repository | default(nginx_app_protect_default_repository_alpine) }}"
    state: "{{ nginx_license_status | default ('present') }}"

- name: (Alpine Linux) {{ nginx_license_status is defined | ternary('Remove', 'Configure') }} NGINX App Protect security updates repository
  lineinfile:
    path: /etc/apk/repositories
    insertafter: EOF
    line: "{{ nginx_app_protect_security_updates_repository | default(nginx_app_protect_security_updates_default_repository_alpine) }}"
    state: "{{ nginx_license_status | default ('present') }}"
  when: (nginx_app_protect_install_signatures | bool) or (nginx_app_protect_install_threat_campaigns | bool)

- name: (Alpine Linux) Install NGINX App Protect {{ nginx_app_protect_version is defined | ternary(nginx_app_protect_version, '') }}
  apk:
    name: "app-protect{{ nginx_app_protect_version | default('') }}"
    state: "{{ nginx_app_protect_state }}"
    update_cache: true
  ignore_errors: "{{ ansible_check_mode }}"
  when: nginx_license_status is not defined

- name: (Alpine Linux) Install NGINX App Protect signatures {{ nginx_app_protect_signatures_version is defined | ternary(nginx_app_protect_signatures_version, '') }}
  apk:
    name: "app-protect-attack-signatures{{ nginx_app_protect_signatures_version | default('') }}"
    state: "{{ nginx_app_protect_state }}"
    update_cache: true
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - nginx_app_protect_install_signatures | bool
    - nginx_license_status is not defined

- name: (Alpine Linux) Install NGINX App Protect threat campaigns {{ nginx_app_protect_threat_campaigns_version is defined | ternary(nginx_app_protect_threat_campaigns_version, '') }}
  apk:
    name: "app-protect-threat-campaigns{{ nginx_app_protect_threat_campaigns_version | default('') }}"
    state: "{{ nginx_app_protect_state }}"
    update_cache: true
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - nginx_app_protect_install_threat_campaigns | bool
    - nginx_license_status is not defined
